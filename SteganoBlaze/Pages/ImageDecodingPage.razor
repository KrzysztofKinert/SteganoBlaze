@page "/ImageDecodingPage"
@using MudBlazor;
@using SteganoBlaze.Shared.Classes;
@using SteganoBlaze.Shared.Classes.Types;
@using SteganoBlaze.Shared.Components;
@inject AppState AppState
@inject IStringLocalizer<Resource> Loc


<PageTitle>@Loc["ImageDecoding"]</PageTitle>

<MudGrid Spacing="1">          
	<MudItem sm="12" md="6" xs="12">
        <MudPaper Elevation="3" Class="py-0 my-0" Style="height:100%">
			<OpenImage Disabled=@processing EncodedImage="true" OnImageChanged=@((Image i) => CarrierChanged(i))/>
        </MudPaper>
	</MudItem>

	<MudItem sm="12" md="6" xs="12"> 
		<MudPaper Elevation="3" Style="height:100%">
			<ShowMessage Message=@message/>
		</MudPaper>
	</MudItem>

	<MudItem xs="12">
        <MudPaper Elevation="3" Style="height:100%" Class="d-flex mud-width-full">
			<MudGrid Class="align-center justify-space-evenly" Spacing="0">
				<MudItem sm="4" xs="12" Class="pa-1">
					<MudText Typo="Typo.body1" Style="font-size: min(3vw, 16px);" Align="Align.Center">@Loc["EnterPasswordIfEncrypted"]</MudText>
					<MudText Typo="Typo.body1" Style="font-size: min(3vw, 16px);" Align="Align.Center">@Loc["LeaveEmptyIfNot"]</MudText>
				</MudItem>
				<MudItem sm="4" xs="12" Class="pa-1">
					<MudTextField @bind-Value="password" Immediate="true" T="string" Class="pt-0 mt-0 mb-2 mx-3" Label="@Loc["EnterPassword"]" InputType="InputType.Password"/>
				</MudItem>
			</MudGrid>
        </MudPaper>
	</MudItem>

	<MudItem xs="12">
        <MudPaper Elevation="3" Class="d-flex align-center justify-center mud-width-full pa-0">
			<ImageDecode  
				EncodedCarrier=@encodedCarrier
				Password=@password
				OnProcessingChanged=@((bool p) => ProcessingChanged(p))
				OnMessageChanged=@((File m) => MessageChanged(m))>
			</ImageDecode>
        </MudPaper>
	</MudItem>

	<MudItem xs="12" hidden="@(encodedCarrier is null)">
		<MudPaper Elevation="3">
			<DecodingImagePreview EncodedCarrier=@encodedCarrier/>
        </MudPaper>
	</MudItem>
</MudGrid>

@code {
	Image? encodedCarrier;
	File? message;

	bool processing = false;
	string? password;

	protected override void OnInitialized()
	{
		AppState.OnChange += StateHasChanged;
		AppState.SetPageTheme(Color.Primary, "ImageDecoding");
	}

	void CarrierChanged(Image value)
	{
		encodedCarrier = value;
		message = null;
	}
	void MessageChanged(File value)
	{
		message = value;
	}
	void ProcessingChanged(bool value) { processing = value; }
}