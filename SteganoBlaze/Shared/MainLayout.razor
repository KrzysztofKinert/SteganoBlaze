@inherits LayoutComponentBase
@inject AppState AppState
@inject IStringLocalizer<Resource> Localize
@implements IDisposable

<MudThemeProvider @bind-IsDarkMode="@isDarkMode" Theme=@AppState.Theme/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="0" Class="d-flex justify-space-between" Color="Color.Primary">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => ToggleNavDrawer())" />
        <MudSpacer />
        <MudText Align="Align.Center" Typo="Typo.h6">@pageName</MudText>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.Settings" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => ToggleSettingsDrawer())" />
    </MudAppBar>
    <MudDrawer @bind-Open="navDrawerOpen" Elevation="1">
        <NavMenu/>
    </MudDrawer>
    <MudDrawer @bind-Open="settingsDrawerOpen" Anchor="Anchor.End" Elevation="1" Width="200px">
        <SettingsMenu OnDarkModeChanged=@((bool d) => DarkModeChanged(d))/>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="pa-4">
            @Body
        </MudContainer>
    </MudMainContent>
    <MudAppBar Bottom="true" Fixed="true" Color="Color.Primary" Elevation="0" Style="max-height: 30px">
        <div>&copy; 2022 Krzysztof Kinert</div>
    </MudAppBar>
</MudLayout>

@code {
    bool navDrawerOpen = true;
    bool settingsDrawerOpen = false;
    private bool isDarkMode = false;
    string? pageName;

    protected override void OnInitialized()
    {
        AppState.OnChange += LocalizePageName;
        AppState.OnChange += StateHasChanged;
    }
    void DarkModeChanged(bool value)
    {
        isDarkMode = value;
    }
    void ToggleNavDrawer()
    {
        navDrawerOpen = !navDrawerOpen;
    }
    void ToggleSettingsDrawer()
    {
        settingsDrawerOpen = !settingsDrawerOpen;
    }
    void LocalizePageName()
    {
        pageName = Localize[AppState.pageName];
    }
    public void Dispose()
    {
        AppState.OnChange -= LocalizePageName;
        AppState.OnChange -= StateHasChanged;
    }
}