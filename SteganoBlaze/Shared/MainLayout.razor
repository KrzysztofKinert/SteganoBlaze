@inherits LayoutComponentBase
@inject AppState AppState
@inject IStringLocalizer<Resource> Localize
@implements IDisposable

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="@AppState.Theme"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="0" Class="d-flex justify-space-between" Color="Color.Primary">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@(_ => ToggleNavDrawer())" />
        <MudSpacer />
        <MudText Align="Align.Center" Typo="Typo.h6">@_pageName</MudText>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.Settings" Color="Color.Inherit" Edge="Edge.Start" OnClick="@(_ => ToggleSettingsDrawer())" />
    </MudAppBar>
    <MudDrawer @bind-Open="_navDrawerOpen" Elevation="1">
        <NavMenu/>
    </MudDrawer>
    <MudDrawer @bind-Open="_settingsDrawerOpen" Anchor="Anchor.End" Elevation="1" Width="200px">
        <SettingsMenu OnDarkModeChanged="@(DarkModeChanged)"/>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="pa-4">
            @Body
        </MudContainer>
    </MudMainContent>
    <MudAppBar Bottom="true" Fixed="true" Color="Color.Primary" Elevation="0" Style="max-height: 30px">
        <div>2022 Krzysztof Kinert</div>
    </MudAppBar>
</MudLayout>

@code {
    bool _navDrawerOpen = true;
    bool _settingsDrawerOpen;
    private bool _isDarkMode;
    string? _pageName;

    protected override void OnInitialized()
    {
        AppState.OnChange += LocalizePageName;
        AppState.OnChange += StateHasChanged;
    }
    void DarkModeChanged(bool value)
    {
        _isDarkMode = value;
    }
    void ToggleNavDrawer()
    {
        _navDrawerOpen = !_navDrawerOpen;
    }
    void ToggleSettingsDrawer()
    {
        _settingsDrawerOpen = !_settingsDrawerOpen;
    }
    void LocalizePageName()
    {
        _pageName = Localize[AppState.PageName];
    }
    public void Dispose()
    {
        AppState.OnChange -= LocalizePageName;
        AppState.OnChange -= StateHasChanged;
    }
}