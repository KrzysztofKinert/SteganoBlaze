<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutSteganoBlaze" xml:space="preserve">
    <value>About SteganoBlaze</value>
  </data>
  <data name="AudioDecoding" xml:space="preserve">
    <value>Audio Decoding</value>
  </data>
  <data name="AudioEncoding" xml:space="preserve">
    <value>Audio Encoding</value>
  </data>
  <data name="ChooseCarrier" xml:space="preserve">
    <value>Select carrier</value>
  </data>
  <data name="Dimensions" xml:space="preserve">
    <value>Dimensions</value>
  </data>
  <data name="ImageDecoding" xml:space="preserve">
    <value>Image Decoding</value>
  </data>
  <data name="ImageEncoding" xml:space="preserve">
    <value>Image Encoding</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="ChooseMessage" xml:space="preserve">
    <value>Select message</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="PixelBitsToEncode" xml:space="preserve">
    <value>Pixel bits to encode</value>
  </data>
  <data name="BChannel" xml:space="preserve">
    <value>B Channel</value>
  </data>
  <data name="RChannel" xml:space="preserve">
    <value>R Channel</value>
  </data>
  <data name="GChannel" xml:space="preserve">
    <value>G Channel</value>
  </data>
  <data name="EncodingInformation" xml:space="preserve">
    <value>Encoding details</value>
  </data>
  <data name="CarrierCapacity" xml:space="preserve">
    <value>Carrier capacity</value>
  </data>
  <data name="CarrierUsage" xml:space="preserve">
    <value>Carrier usage</value>
  </data>
  <data name="Encode" xml:space="preserve">
    <value>Encode</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="OriginalImage" xml:space="preserve">
    <value>Original Image</value>
  </data>
  <data name="EncodedImage" xml:space="preserve">
    <value>Encoded Image</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="Checking" xml:space="preserve">
    <value>Checking...</value>
  </data>
  <data name="ReadingImageData" xml:space="preserve">
    <value>Reading image data...</value>
  </data>
  <data name="EncodingMessage" xml:space="preserve">
    <value>Encoding message...</value>
  </data>
  <data name="SavingImageData" xml:space="preserve">
    <value>Saving image data...</value>
  </data>
  <data name="_encoded" xml:space="preserve">
    <value>_encoded</value>
  </data>
  <data name="EncodingDoneIn" xml:space="preserve">
    <value>Encoding done in</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="DecodedFile" xml:space="preserve">
    <value>Recovered file</value>
  </data>
  <data name="Decode" xml:space="preserve">
    <value>Decode</value>
  </data>
  <data name="ImageNotEncoded" xml:space="preserve">
    <value>Image not encoded!</value>
  </data>
  <data name="DecodingMessage" xml:space="preserve">
    <value>Decoding message...</value>
  </data>
  <data name="SavingMessageData" xml:space="preserve">
    <value>Saving message data...</value>
  </data>
  <data name="DecodingDoneIn" xml:space="preserve">
    <value>Decoding done in</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Steganography" xml:space="preserve">
    <value>Steganography</value>
  </data>
  <data name="MaxMessageSize" xml:space="preserve">
    <value>Max message size is</value>
  </data>
  <data name="MaxCarrierSize" xml:space="preserve">
    <value>Max carrier size is</value>
  </data>
  <data name="EncodingBitsWarning" xml:space="preserve">
    <value>Encoding many bits will distort the carrier</value>
  </data>
  <data name="MaxCarrierPixels" xml:space="preserve">
    <value>Max carrier pixel count is</value>
  </data>
  <data name="Duration" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="SampleBitsToEncode" xml:space="preserve">
    <value>Sample bits to encode</value>
  </data>
  <data name="Bits" xml:space="preserve">
    <value>Bits</value>
  </data>
  <data name="BitsPerSample" xml:space="preserve">
    <value>Bits per sample</value>
  </data>
  <data name="OriginalAudio" xml:space="preserve">
    <value>Original Audio</value>
  </data>
  <data name="EncodedAudio" xml:space="preserve">
    <value>Encoded Audio</value>
  </data>
  <data name="AudioNotEncoded" xml:space="preserve">
    <value>Audio not encoded</value>
  </data>
  <data name="CarrierFormat" xml:space="preserve">
    <value>Carrier format</value>
  </data>
  <data name="ErrorCompressingMessage" xml:space="preserve">
    <value>Message compression error</value>
  </data>
  <data name="PasswordsMustMatch" xml:space="preserve">
    <value>Passwords must match</value>
  </data>
  <data name="EnterPassword" xml:space="preserve">
    <value>Enter password</value>
  </data>
  <data name="RepeatPassword" xml:space="preserve">
    <value>Repeat password</value>
  </data>
  <data name="ErrorSavingCarrier" xml:space="preserve">
    <value>Carrier save error</value>
  </data>
  <data name="DecryptingMessage" xml:space="preserve">
    <value>Decrypting message</value>
  </data>
  <data name="ErrorSavingMessage" xml:space="preserve">
    <value>Message save error</value>
  </data>
  <data name="EnterPasswordIfEncrypted" xml:space="preserve">
    <value>Enter the password if the message was additionally encrypted</value>
  </data>
  <data name="LeaveEmptyIfNot" xml:space="preserve">
    <value>Leave field empty if encryption was not used</value>
  </data>
  <data name="MoreOptions" xml:space="preserve">
    <value>More options</value>
  </data>
  <data name="MessageCompression" xml:space="preserve">
    <value>Message compression</value>
  </data>
  <data name="MessageEncryption" xml:space="preserve">
    <value>Message encryption</value>
  </data>
  <data name="ScatteredEncoding" xml:space="preserve">
    <value>Scattered encoding</value>
  </data>
  <data name="Off" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="On" xml:space="preserve">
    <value>On</value>
  </data>
  <data name="EncryptionPassword" xml:space="preserve">
    <value>Encryption password</value>
  </data>
  <data name="DecompressingMessage" xml:space="preserve">
    <value>Decompressing message</value>
  </data>
  <data name="CarrierImageCorrupted" xml:space="preserve">
    <value>Image corrupted</value>
  </data>
  <data name="EncryptingMessage" xml:space="preserve">
    <value>Encrypting message...</value>
  </data>
  <data name="ErrorEncryptingMessage" xml:space="preserve">
    <value>Message encryption error</value>
  </data>
  <data name="ErrorEncodingMessage" xml:space="preserve">
    <value>Message encoding error</value>
  </data>
  <data name="CarrierAudioCorrupted" xml:space="preserve">
    <value>Audio corrupted</value>
  </data>
  <data name="CheckingCarrier" xml:space="preserve">
    <value>Checking carrier...</value>
  </data>
  <data name="SelectingCarrier_1" xml:space="preserve">
    <value>Select a carrier, an image or audio file, in which the message will be hidden.</value>
  </data>
  <data name="SelectingCarrier_2" xml:space="preserve">
    <value>Accepted image formats:</value>
  </data>
  <data name="SelectingCarrier_3" xml:space="preserve">
    <value>Accepted audio formats:</value>
  </data>
  <data name="SelectingCarrier_4" xml:space="preserve">
    <value>The maximum size of the carrier file is 10 MB.</value>
  </data>
  <data name="SelectingMessage_1" xml:space="preserve">
    <value>Select a message which will be hidden inside the carrier.</value>
  </data>
  <data name="SelectingMessage_2" xml:space="preserve">
    <value>The message can be any file with a maximum size of 5 MB.</value>
  </data>
  <data name="EncodingOptions_1" xml:space="preserve">
    <value>Select a the amount of bits of image pixel channels or audio samples which will be used to hide the message data.</value>
  </data>
  <data name="EncodingOptions_2" xml:space="preserve">
    <value>In image carriers, from 0 to 8 bits can be chosen separately for the Red, Green and Blue pixel channels.</value>
  </data>
  <data name="EncodingOptions_3" xml:space="preserve">
    <value>In audio carriers, the maximum number of sample bits to be used is determined by the resolution of the chosen audio file.</value>
  </data>
  <data name="EncodingOptions_4" xml:space="preserve">
    <value>The encoding information panel shows the capacity of the carrier using the currently chosen pixel/sample bit amount and the ratio of message size to that capacity.</value>
  </data>
  <data name="EncodingOptions_5" xml:space="preserve">
    <value>Encoding the message on many bits can significantly degrade the carrier quality.</value>
  </data>
  <data name="MoreOptions_1" xml:space="preserve">
    <value>Encoded carrier format:</value>
  </data>
  <data name="MoreOptions_2" xml:space="preserve">
    <value>In Chrome, Edge and Opera browsers, the WebP image format can be used for the encoded carrier. Otherwise the carrier will be saved as PNG.</value>
  </data>
  <data name="MoreOptions_3" xml:space="preserve">
    <value>Compression:</value>
  </data>
  <data name="MoreOptions_4" xml:space="preserve">
    <value>Message data can be additionally compressed. The efficiency of the compression depends on the message file format and the contents of the file.</value>
  </data>
  <data name="MoreOptions_5" xml:space="preserve">
    <value>Encryption:</value>
  </data>
  <data name="MoreOptions_6" xml:space="preserve">
    <value>Message data can be additionally encrypted with the fast and secure AES-GCM algorithm using an user provided password.</value>
  </data>
  <data name="MoreOptions_7" xml:space="preserve">
    <value>Scattered encoding:</value>
  </data>
  <data name="MoreOptions_8" xml:space="preserve">
    <value>The message can be encoded in a normal mode in which pixels or samples are encoded sequentially from first to last, or in a scattered mode in which pixels or samples are encoded in a random order.</value>
  </data>
  <data name="MoreOptions_9" xml:space="preserve">
    <value>Choosing the scattered mode can make the encoding less visible and harder to detect.</value>
  </data>
  <data name="MoreOptions_10" xml:space="preserve">
    <value>It's efficiency and performance decreases the larger the ratio of message size to carrier capacity.</value>
  </data>
  <data name="SelectingCarrier_6" xml:space="preserve">
    <value>Select a carrier, an image or audio file, in which the message is hidden.</value>
  </data>
  <data name="Encoding_1" xml:space="preserve">
    <value>If the message fits inside the carrier, click the "Encode" button to begin the encoding process.</value>
  </data>
  <data name="Encoding_2" xml:space="preserve">
    <value>After the message has been encoded successfully, click the "Save" button to save the encoded carrier.</value>
  </data>
  <data name="EncryptionPassword_1" xml:space="preserve">
    <value>If the message was additionally encrypted, input the password. Otherwise leave the field empty.</value>
  </data>
  <data name="Decoding_1" xml:space="preserve">
    <value>Click the "Decode" button to begin the decoding process.</value>
  </data>
  <data name="Decoding_2" xml:space="preserve">
    <value>If the message has been decoded successfully, it's details will be displayed in the "Recovered file" section.</value>
  </data>
  <data name="Decoding_3" xml:space="preserve">
    <value>Click the "Save" button to save the recovered file.</value>
  </data>
  <data name="SelectingCarrier" xml:space="preserve">
    <value>Selecting carrier</value>
  </data>
  <data name="SelectingMessage" xml:space="preserve">
    <value>Selecting message</value>
  </data>
  <data name="EncodingOptions" xml:space="preserve">
    <value>Encoding options</value>
  </data>
  <data name="Encoding" xml:space="preserve">
    <value>Encoding</value>
  </data>
  <data name="Decoding" xml:space="preserve">
    <value>Decoding</value>
  </data>
  <data name="EncodingInstructions" xml:space="preserve">
    <value>Encoding instructions</value>
  </data>
  <data name="DecodingInstructions" xml:space="preserve">
    <value>Decoding instructions</value>
  </data>
  <data name="ChannelValueChange" xml:space="preserve">
    <value>Possible channel value change</value>
  </data>
  <data name="SampleValueChange" xml:space="preserve">
    <value>Possible sample value change</value>
  </data>
</root>