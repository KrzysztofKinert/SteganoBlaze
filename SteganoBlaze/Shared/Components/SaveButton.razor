@using Shared.Classes.Types;
@inject AppState AppState
@inject IStringLocalizer<Resource> Loc
@inject ISnackbar Snackbar
@inject IJSRuntime js

<a hidden id="saveLink" download="" href="" target="_blank"/>
<MudButton HtmlTag="label"
		   Variant="Variant.Filled"
		   Color=@Color.Primary
		   StartIcon="@Icons.Filled.Download"
		   OnClick="SaveFile"
		   Disabled=@(fileToSave is null)
		   Style="width:100%">
	<MudText Typo="Typo.button" Class="align-center">@Loc["Save"]</MudText>
</MudButton>

@code {
	[Parameter]
	public File? fileToSave { get; set; }

	protected async Task SaveFile()
	{
		try
		{
			await js.InvokeVoidAsync("saveFile", fileToSave);
		}
		catch
		{
			Snackbar.Add(Loc["ErrorSavingMessage"], Severity.Error);
		}
	}
}
