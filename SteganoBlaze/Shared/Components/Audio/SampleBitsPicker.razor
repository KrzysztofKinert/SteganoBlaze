@inject IStringLocalizer<Resource> Localize
@inject ISnackbar Snackbar

<MudText Typo="Typo.body1" Align="Align.Center">@Localize["SampleBitsToEncode"]</MudText>
<MudDivider />
<MudList Clickable="false" Dense="true" DisableGutters="true" DisablePadding="true" Class="d-flex flex-row align-content-center">
	<MudListItem>
		<MudNumericField Class="px-4" Value="@sampleBitsToEncode" ValueChanged=@((int b) => SampleBitsToEncodeChanged(b)) Label="@Localize["Bits"]" Variant="Variant.Text" Min="1" Max=@(BitsPerSample ?? 32) />
	</MudListItem>
	<MudDivider Vertical="true" FlexItem="true" DividerType="DividerType.Middle" Class="pa-0 ma-0" />
	<MudListItem>
		<MudContainer Class="d-flex flex-column align-content-center pa-0 ma-0">
			<MudText Typo="Typo.body2" Align="Align.Center" Style="font-size: min(3.5vw, 14px);">@Localize["BitsPerSample"]</MudText>
			<MudText Typo="Typo.body1" Align="Align.Center">@(BitsPerSample.ToString() ?? "-")</MudText>
			</MudContainer>
		</MudListItem>
</MudList>

	@code {
	[Parameter] public int? BitsPerSample { get; set; }

	[Parameter] public EventCallback<int> OnSampleBitsToEncodeChanged { get; set; }

	int sampleBitsToEncode = 1;

	async Task SampleBitsToEncodeChanged(int value)
	{
		sampleBitsToEncode = value;

		if (value > 3)
			Snackbar.Add(Localize["EncodingBitsWarning"], Severity.Warning);

		await OnSampleBitsToEncodeChanged.InvokeAsync(sampleBitsToEncode);
	}
}
