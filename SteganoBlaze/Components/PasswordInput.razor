@inject IStringLocalizer<Resource> Localize
@inject AppState AppState
@implements IDisposable

@if (RepeatPassword is true)
{
	<MudGrid Class="align-content-center justify-space-evenly pb-4" Spacing="2">
		<MudItem sm="4" xs="12">
			<MudTextField Value="password" ValueChanged="@((string p) => PasswordEntered(p))" Immediate="true" T="string" Label="@Localize["EnterPassword"]" HelperText="@passwordError" Error="@(passwordError is not null)" HelperTextOnFocus="false" />
		</MudItem>
		<MudItem sm="4" xs="12">
			<MudTextField Value="passwordRepeat" ValueChanged="@((string r) => PasswordRepeatEntered(r))" Immediate="true" T="string" Label="@Localize["RepeatPassword"]" HelperText="@passwordRepeatError" Error="@(passwordRepeatError is not null)" HelperTextOnFocus="false" />
		</MudItem>
	</MudGrid>
}
else
{
	<MudTextField Value="password" ValueChanged="@((string p) => PasswordEntered(p))" Immediate="true" T="string" Class="pt-0 mt-0 mb-2 mx-3" Label="@Localize["EnterPassword"]" />
}


@code {
	[Parameter] public bool RepeatPassword { get; set; } = false;
	[Parameter] public EventCallback<string> OnPasswordChanged { get; set; }

	string password = "";
	string passwordRepeat = "";

	string? passwordError = null;
	string? passwordRepeatError = null;

	protected override void OnInitialized() { AppState.OnChange += StateHasChanged; }
	public void Dispose() { AppState.OnChange -= StateHasChanged; }

	async Task PasswordEntered(string value)
	{
		password = value;

		if (RepeatPassword is true)
			await Validate();
		else
		{
			if (password == "")
				await OnPasswordChanged.InvokeAsync(null);
			else
				await OnPasswordChanged.InvokeAsync(password);
		}
	}
	async Task PasswordRepeatEntered(string value)
	{
		passwordRepeat = value;
		await Validate();
	}

	async Task Validate()
	{
		if (password != passwordRepeat)
		{
			passwordError = Localize["PasswordsMustMatch"];
			passwordRepeatError = Localize["PasswordsMustMatch"];
			await OnPasswordChanged.InvokeAsync(null);
		}
		else
		{
			if (password == "")
			{
				passwordError = Localize["EnterPassword"];
				passwordRepeatError = Localize["RepeatPassword"];
				await OnPasswordChanged.InvokeAsync(null);
			}
			else
			{
				passwordError = null;
				passwordRepeatError = null;
				await OnPasswordChanged.InvokeAsync(password);
			}
		}
	}
}
